{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","button","affair","item","message","avatar","content","angle","text","name","time","greeting","error","input","errorInput","count","superInput","blue","column","testSpanError","default","red","checkbox","label","spanClassName","App","Message","props","react_default","a","createElement","className","s","src","alt","messageData","HW1","h1_Message","Affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","h2_Affair","key","onAll","onHigh","onMiddle","onLow","setFilter","defaultAffairs","filterAffairs","affairs","filter","deleteAffair","HW2","_useState","useState","_useState2","Object","slicedToArray","setAffairs","_useState3","_useState4","filteredAffairs","h2_Affairs","Greeting","_ref","setNameCallback","addUser","onKeyEnter","totalUsers","inputClass","value","onChange","onKeyPress","onBlur","GreetingContainer","users","addUserCallback","setName","setError","alert","concat","length","h3_Greeting","e","trimmedName","currentTarget","trim","HW3","setUsers","h3_GreetingContainer","newUser","v1","toConsumableArray","SuperInputText","type","onChangeText","onEnter","restProps","objectWithoutProperties","finalSpanClassName","finalInputClassName","Fragment","assign","SuperButton","finalClassName","SuperCheckbox","onChangeChecked","children","checked","HW4","setText","showAlert","setChecked","c1_SuperInputText_SuperInputText","c2_SuperButton_SuperButton","disabled","style","opacity","c3_SuperCheckbox_SuperCheckbox","h1_HW1","h2_HW2","h3_HW3","h4_HW4","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","u1_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.96286106.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__KqEcu\",\"affair\":\"Affairs_affair__17RgB\",\"item\":\"Affairs_item__FWcLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1yCaN\",\"avatar\":\"Message_avatar__1_l7k\",\"content\":\"Message_content__3ILL1\",\"angle\":\"Message_angle__3j25K\",\"text\":\"Message_text__kMcEV\",\"name\":\"Message_name__IrV9s\",\"time\":\"Message_time__14qtl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3h8Qf\",\"error\":\"Greeting_error__2N5c0\",\"input\":\"Greeting_input__4jtvt\",\"errorInput\":\"Greeting_errorInput__1G-P6\",\"button\":\"Greeting_button__22QXd\",\"count\":\"Greeting_count__2DP_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__31mth\",\"errorInput\":\"SuperInputText_errorInput__1F2eB\",\"error\":\"SuperInputText_error__3DKA7\",\"input\":\"SuperInputText_input__1SVuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3f6ts\",\"column\":\"HW4_column__G-h_s\",\"testSpanError\":\"HW4_testSpanError__1i6Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2tO4r\",\"red\":\"SuperButton_red__1KqDh\",\"button\":\"SuperButton_button__28JeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__332bn\",\"label\":\"SuperCheckbox_label__2_rkm\",\"spanClassName\":\"SuperCheckbox_spanClassName__3IDfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__317tt\"};","import React from 'react'\nimport s from './Message.module.css'\n\n\nexport type MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} alt={\"avatar\"} className={s.avatar}/>\n\n            <div className={s.angle}/>\n\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\n\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div className={s.affair}>\n            <div className={s.item}>{props.affair.name}</div>\n            <div>{props.affair.priority}</div>\n            <button onClick={deleteCallback} className={s.button}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    const onAll = s.button\n    const onHigh = s.button\n    const onMiddle = s.button\n    const onLow = s.button\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={onAll}>All</button>\n            <button onClick={setHigh} className={onHigh}>High</button>\n            <button onClick={setMiddle} className={onMiddle}>Middle</button>\n            <button onClick={setLow} className={onLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\n// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n// pure helper functions\n\nexport const filterAffairs = (affairs: Array<AffairType> , filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    else if (filter === 'middle') return affairs.filter(a => a.priority === 'middle')\n    else if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    else {\n    }\n    return []\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n     return  affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onKeyEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onKeyEnter, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input\n\n    return (\n        <div className={s.greeting}>\n            <div>\n                <input value={name}\n                       onChange={setNameCallback}\n                       className={inputClass}\n                       onKeyPress={onKeyEnter}\n                       onBlur={setNameCallback}\n                />\n                <div className={s.error}>{error}</div>\n            </div>\n\n            <button onClick={addUser} className={s.button}>add</button>\n            <div className={s.count}>{totalUsers}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement> ) => {\n        const trimmedName = e.currentTarget.value.trim()\n        if (trimmedName) {\n            setName(trimmedName)\n            error && setError('')\n        } else {\n            name && setName('')\n            setError('Name is required')\n        }\n    }\n\n    const addUser = () => {\n        if (name) {\n            addUserCallback(name)\n            alert(`Hello ${name}!`)\n            setName('')\n        }\n    }\n\n    const onKeyEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onKeyEnter={onKeyEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport { v1 } from 'uuid'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let user = {_id: v1(), name: name}\n        let newUser = [user, ...users]\n        setUsers(newUser) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled style={{opacity: 0.5}}>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}